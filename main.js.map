{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/js/stream/yt.js","webpack:///./src/js/player.js","webpack:///./src/js/background.js","webpack:///./src/js/shortcuts.js","webpack:///./src/js/index.js","webpack:///./src/js/static.js"],"sourcesContent":["class State {\n  STOPPED = 0\n  PLAYING = 1\n}\n\nexport default class YouTube {\n  constructor(player_el, stream_url) {\n    this.player_el = player_el;\n  }\n\n  setup(){\n    var yt_iframe = document.createElement(\"iframe\");\n    yt_iframe.setAttribute(\"allow\", \"autoplay; encrypted-media;\");\n    yt_iframe.setAttribute(\"src\", stream.url + \"?enablejsapi=1\");\n    this.player_el.appendChild(yt_iframe);\n    this.state = State.STOPPED;\n  }\n\n  post_message(message) {\n    this.player_el.childNodes[0].contentWindow.postMessage('{\"event\":\"command\",\"func\":\"' + message + '\",\"args\":\"\"}', '*')\n  }\n\n  play() {\n    if (this.state == State.STOPPED) {\n      this.post_message('playVideo')\n      this.state = State.PLAYING;\n    }\n  }\n\n  stop() {\n    if (this.state == State.PLAYING) {\n      this.post_message('stopVideo')\n      this.state = State.STOPPED;\n    }\n  }\n\n  toggle() {\n    if (this.state == State.PLAYING) {\n      this.stop();\n      return;\n    }\n    else if (this.state == State.STOPPED) {\n      this.play();\n      return;\n    }\n  }\n\n  destroy() {\n    this.stop()\n    while (this.player_el.lastChild) {\n      this.player_el.removeChild(this.player_el.lastChild);\n    }\n    this.state == undefined;\n  }\n}\n","import YouTube from \"./stream/yt.js\"\n\nexport default class Player {\n  STREAMS_URL = \"streams.json\"\n\n  STREAMERS = {\n    \"www.youtube.com\": YouTube\n  }\n\n  constructor (player_el) {\n    this.player_el = player_el;\n  }\n\n  get_json(url, callback) {\n    fetch(url)\n      .then(function(response) {\n        if (!response.ok) {\n          throw new Error(\"HTTP error, status = \" + response.status);\n        }\n        return response.json();\n      })\n      .then(callback)\n      .then(() => {this.play()})\n      .catch(function(error) {\n        console.log(error.message);\n      });\n  }\n\n  handle_streams(streams) {\n    this.update_stream(this.random_choice(streams));\n  }\n\n  random_choice(arr){\n    return arr[Math.floor(Math.random() * arr.length)];\n  }\n\n  update_stream (stream) {\n    if (this.streamer) {this.streamer.destroy()}\n\n    const stream_url = new URL(stream.url);\n    this.streamer = this.STREAMERS[stream_url.hostname](this.player_el, stream.url)\n    this.streamer.setup()\n  }\n\n  pause() {\n    this.streamer.stop();\n  }\n\n  play() {\n    this.streamer.play();\n  }\n\n  toggle() {\n    this.streamer.toggle();\n  }\n\n  clear(){\n    if (this.streamer) {this.streamer.destroy()};\n  }\n\n  start() {\n    this.get_json(this.STREAMS_URL, this.handle_streams)\n  }\n}\n","export default class BackgroundVideo {\n  BACKGROUND_VIDEO_URL = \"backgrounds.json\"\n  constructor (background_video_el) {\n    this.background_video_el = background_video_el;\n    this.background_video_el.defaultPlaybackRate = 0.5;\n  }\n\n  get_json(url, callback) {\n    fetch(url)\n      .then(function(response) {\n        if (!response.ok) {\n          throw new Error(\"HTTP error, status = \" + response.status);\n        }\n        return response.json();\n      })\n      .then(callback)\n      .catch(function(error) {\n        console.log(error.message);\n      });\n  }\n\n  handle_backgrounds(backgrounds) {\n    this.update_video(this.random_choice(backgrounds));\n  }\n\n  random_choice(arr){\n    return arr[Math.floor(Math.random() * arr.length)];\n  }\n\n  update_video (background) {\n    this.background_video_el.setAttribute(\"src\", background.url);\n  }\n\n  start() {\n    this.get_json(this.BACKGROUND_VIDEO_URL, this.handle_backgrounds)\n  }\n}\n","export default class Shortcuts {\n  KEY_MAP = {\n    \"Space\": this.space\n  }\n\n  constructor(background, player) {\n    this.background = background;\n    this.player = player;\n  }\n\n  setup() {\n    document.addEventListener(\"keypress\", (e) => {\n      e = e || window.event;\n\n      this.KEY_MAP[e.code](e)\n    })\n  }\n\n  space (e) {\n    this.player.toggle();\n  }\n}\n","import StaticPlayer from \"./static.js\";\n\n(function () {\n  const static_player = new StaticPlayer();\n  static_player.run();\n})();\n","import Player from \"./player.js\";\nimport Background from \"./background.js\";\nimport Shortcuts from \"./shortcuts.js\";\n\nexport default class StaticPlayer {\n  PLAYER_EL_ID = \"player\"\n  BACKGROUND_VIDEO_EL_ID = \"background-video\"\n\n  #background_video;\n  #background;\n  #player_el;\n  #player;\n  #shortcuts;\n\n\n  get background_video_el (){\n    if (!this.#background_video){\n      this.#background_video = document.getElementById(this.BACKGROUND_VIDEO_EL_ID);\n    }\n    return this.#background_video;\n  }\n\n  get background() {\n    if (!this.#background) {\n      this.#background = new Background(this.background_video_el);\n    }\n    return this.#background;\n  }\n\n  get player_el (){\n    if (!this.#player_el) {\n      this.#player_el = document.getElementById(this.PLAYER_EL_ID);\n    }\n    return this.#player_el;\n  }\n\n  get player(){\n    if(!this.#player) {\n      this.#player = new Player(this.player_el);\n    }\n    return this.#player;\n  }\n\n  get shortcuts() {\n    if (!this.#shortcuts) {\n      this.#shortcuts = new Shortcuts(this.background, this.player);\n    }\n    return this.#shortcuts;\n  }\n\n  run() {\n    this.shortcuts.setup();\n    this.player.start();\n    this.background.start();\n  }\n}\n"],"names":["State","STOPPED","PLAYING","YouTube","constructor","player_el","stream_url","this","setup","yt_iframe","document","createElement","setAttribute","stream","url","appendChild","state","post_message","message","childNodes","contentWindow","postMessage","play","stop","toggle","destroy","lastChild","removeChild","Player","STREAMS_URL","STREAMERS","get_json","callback","fetch","then","response","ok","Error","status","json","catch","error","console","log","handle_streams","streams","update_stream","random_choice","arr","Math","floor","random","length","streamer","URL","hostname","pause","clear","start","BackgroundVideo","BACKGROUND_VIDEO_URL","background_video_el","defaultPlaybackRate","handle_backgrounds","backgrounds","update_video","background","Shortcuts","KEY_MAP","space","player","addEventListener","e","window","event","code","PLAYER_EL_ID","BACKGROUND_VIDEO_EL_ID","getElementById","run","shortcuts"],"sourceRoot":""}