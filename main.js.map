{"version":3,"sources":["webpack:///./src/js/index.js"],"names":["background_el","document","getElementById","player_el","fetch","then","response","ok","Error","status","json","backgrounds","background","Math","floor","random","length","setAttribute","playbackRate","catch","error","console","log","message","streams","stream","URL","hostname","lastChild","removeChild","yt_iframe","createElement","appendChild"],"mappings":"MAAA,MAAMA,EAAgBC,SAASC,eAAe,oBACxCC,EAAaF,SAASC,eAAe,UAK3CE,MAHwB,oBAIrBC,MAAK,SAASC,GACb,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAM,wBAA0BF,EAASG,QAEnD,OAAOH,EAASI,UAEjBL,MAAK,SAASM,GACb,IAAIC,EAAaD,EAAYE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAYK,SACpEhB,EAAciB,aAAa,MAAOL,EAAgB,KAClDZ,EAAckB,aAAe,MAE9BC,OAAM,SAASC,GACdC,QAAQC,IAAIF,EAAMG,YAGtBnB,MAlBoB,gBAmBjBC,MAAK,SAASC,GACb,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,wBAA0BF,EAASG,QAErD,OAAOH,EAASI,UAEjBL,MAAK,SAASmB,GACb,IAAIC,EAASD,EAAQX,KAAKC,MAAMD,KAAKE,SAAWS,EAAQR,SAExD,OADmB,IAAIU,IAAID,EAAY,KACrBE,UAChB,IAAK,kBACH,KAAOxB,EAAUyB,WACfzB,EAAU0B,YAAY1B,EAAUyB,WAElC,IAAIE,EAAY7B,SAAS8B,cAAc,UACvCD,EAAUb,aAAa,QAAS,8BAChCa,EAAUb,aAAa,MAAOQ,EAAY,IAAI,eAC9CtB,EAAU6B,YAAYF,GACtB,MACF,QACE,MAAM,IAAItB,MAAM,iCAGrBW,OAAM,SAASC,GACdC,QAAQC,IAAIF,EAAMG,a","file":"main.js","sourcesContent":["const background_el = document.getElementById(\"background-video\");\nconst player_el  = document.getElementById(\"player\");\n\nconst backgrounds_url = \"backgrounds.json\";\nconst streams_url = \"streams.json\";\n\nfetch(backgrounds_url)\n  .then(function(response) {\n    if (!response.ok) {\n    throw new Error(\"HTTP error, status = \" + response.status);\n    }\n    return response.json();\n  })\n  .then(function(backgrounds) {\n    var background = backgrounds[Math.floor(Math.random() * backgrounds.length)];\n    background_el.setAttribute(\"src\", background['url']);\n    background_el.playbackRate = 0.5;\n  })\n  .catch(function(error) {\n    console.log(error.message);\n  });\n\nfetch(streams_url)\n  .then(function(response) {\n    if (!response.ok) {\n      throw new Error(\"HTTP error, status = \" + response.status);\n    }\n    return response.json();\n  })\n  .then(function(streams) {\n    var stream = streams[Math.floor(Math.random() * streams.length)];\n    const stream_url = new URL(stream['url']);\n    switch(stream_url.hostname) {\n      case \"www.youtube.com\":\n        while (player_el.lastChild) {\n          player_el.removeChild(player_el.lastChild);\n        }\n        var yt_iframe = document.createElement(\"iframe\");\n        yt_iframe.setAttribute(\"allow\", \"autoplay; encrypted-media;\");\n        yt_iframe.setAttribute(\"src\", stream['url'] + \"?autoplay=1\");\n        player_el.appendChild(yt_iframe);\n        break;\n      default:\n        throw new Error(\"No stream processor found\");\n    }\n  })\n  .catch(function(error) {\n    console.log(error.message);\n  });\n"],"sourceRoot":""}