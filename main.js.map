{"version":3,"file":"main.js","mappings":"mBAEe,MAAMA,EACnB,OACA,QAEAC,YAAYC,GACVC,KAAKD,OAASA,EACdC,KAAKC,UAAYF,EAAOE,UACxBD,KAAKE,WAAaH,EAAOI,OAAOC,IAGlCC,QACE,IAAIC,EAAON,KACXA,aAAeO,SAASC,cAAc,UACtCR,aAAaS,aAAa,QAAS,8BACnCT,aAAaS,aAAa,MAAOT,KAAKE,WAAa,kBACnDF,aAAaU,iBAAiB,QAAQ,SAAUC,GAAKL,EAAKM,UAC1DZ,KAAKC,UAAUY,YAAYb,cAC3BA,YClBS,EDqBX,YACE,OAAOA,YAGTc,aAAaC,GACXf,aAAagB,cAAcC,YAAY,8BAAgCF,EAAU,eAAgB,KAGnGH,OACEZ,KAAKc,aAAa,aAClBd,YC9BS,EDiCXkB,OACElB,KAAKc,aAAa,aAClBd,YCpCS,EDuCXmB,UACEnB,KAAKkB,OACLlB,aAAaoB,SACbpB,kBAAeqB,EACfrB,aE1CJ,IAAIsB,EAGFA,EAAgB,ICAH,MACbC,uBAAyB,mBACzBC,WCPa,MACbC,qBAAuB,mBAEvB3B,YAAaC,GACXC,KAAKD,OAASA,EACdC,KAAK0B,oBAAsB3B,EAAO2B,oBAClC1B,KAAK0B,oBAAoBC,oBAAsB,GAGjDC,SAASxB,EAAKyB,GACZ,OAAOC,MAAM1B,GACV2B,MAAK,SAASC,GACb,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,wBAA0BF,EAASG,QAErD,OAAOH,EAASI,UAEjBL,KAAKF,EAASQ,KAAKrC,OAGxBsC,mBAAmBC,GACjBvC,KAAKuC,YAAcA,EAGrBC,cAAcC,GACZ,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,SAG5CC,oBACE,IAAIxC,EAAON,KACX,IAAIuC,EAAcQ,OAAOC,KAAKhD,KAAKuC,aAAaU,KAAI,SAAUC,GAC5D,OAAO5C,EAAKiC,YAAYW,MAE1B,OAAOlD,KAAKwC,cAAcD,GAG5BY,kBAAmBC,GACjBpD,KAAK0B,oBAAoBjB,aAAa,MAAO2C,EAAWhD,KAG1DiD,SACErD,KAAKoD,WAAapD,KAAK8C,oBACvB9C,KAAKmD,kBAAkBnD,KAAKoD,YAC5BpD,KAAKD,OAAOuD,KAAKH,kBAAkBnD,KAAKoD,YACpCpD,KAAKD,OAAOwD,OAAOpD,QACrBqD,aAAaC,QAAQ,MAAQzD,KAAKD,OAAOwD,OAAOpD,OAAOuD,GAAI1D,KAAKoD,WAAWM,IAK/EC,kBACE,OAAO3D,KAAK4B,SAAS5B,KAAKyB,qBAAsBzB,KAAKsC,oBAGvDsB,QACE5D,KAAK2D,kBACF5B,KAAK/B,KAAKqD,OAAOhB,KAAKrC,SD/C3B6D,aAAe,SACfC,OEPa,MACbC,YAAc,eAEdC,QAAU,CACR,kBAAmBnE,GAGrBC,YAAaC,GACXC,KAAKD,OAASA,EACdC,KAAKC,UAAYF,EAAOE,UAG1B2B,SAASxB,EAAKyB,GACZ,OAAOC,MAAM1B,GACV2B,MAAK,SAASC,GACb,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,wBAA0BF,EAASG,QAErD,OAAOH,EAASI,UAItB6B,eAAeC,GACblE,KAAKkE,QAAUA,EAGjB1B,cAAcC,GACZ,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,SAG5CsB,gBACE,IAAI7D,EAAON,KACX,IAAIkE,EAAUnB,OAAOC,KAAKhD,KAAKkE,SAASjB,KAAI,SAAUC,GACpD,OAAO5C,EAAK4D,QAAQhB,MAEtB,OAAOlD,KAAKwC,cAAc0B,GAG5BE,gBACEpE,KAAKG,OAASH,KAAKmE,gBACfnE,KAAKqE,QAASrE,KAAKqE,OAAOlD,UAC9BnB,KAAKD,OAAOuD,KAAKgB,cAActE,KAAKG,QAEpC,MAAMD,EAAa,IAAIqE,IAAIvE,KAAKG,OAAOC,KACvCJ,KAAKqE,OAAS,IAAIrE,KAAKgE,QAAQ9D,EAAWsE,UAAUxE,MACpDA,KAAKqE,OAAOhE,QACZmD,aAAaC,QAAQ,SAAUzD,KAAKG,OAAOuD,IAG7Ce,QACEzE,KAAKqE,OAAOnD,OAGdN,OACEZ,KAAKqE,OAAOzD,OAGd8D,SJ1DW,GI2DL1E,KAAKqE,OAAOM,MJ5DP,GIgEA3E,KAAKqE,OAAOM,OACnB3E,KAAKqE,OAAOzD,OAJZZ,KAAKqE,OAAOnD,OAShB0D,QACM5E,KAAKqE,QAASrE,KAAKqE,OAAOlD,UAGhCyC,QACE5D,KAAK4B,SAAS5B,KAAK+D,YAAa/D,KAAKiE,gBAClClC,KAAK/B,KAAKiE,eAAe5B,KAAKrC,OAC9B+B,KAAK/B,KAAKoE,cAAc/B,KAAKrC,SFlElC6E,UGZa,MACbC,QAAU,CACR,MAAS9E,KAAK+E,UACd,WAAc/E,KAAKgF,aACnB,UAAahF,KAAKiF,aAClB,UAAajF,KAAKkF,kBAClB,QAAWlF,KAAKkF,mBAGlBpF,YAAYC,GACVC,KAAKD,OAASA,EAGhBM,QACE,MAAMC,EAAON,KACbO,SAASG,iBAAiB,SAAUC,KAClCA,EAAIA,GAAKwE,OAAOC,OAEVC,QAAQrF,KAAK8E,SACjB9E,KAAK8E,QAAQnE,EAAE0E,MAAMC,KAAKhF,EAAMK,MAKtCoE,UAAWpE,GACTX,KAAKD,OAAOwD,OAAOmB,SAGrBM,eACEhF,KAAKD,OAAOwD,OAAOa,gBAGrBa,eACEjF,KAAKD,OAAOwD,OAAOa,gBAGrBc,oBACElF,KAAKD,OAAOqD,WAAWC,WHvBzBkC,WAAa,OACbC,KIfa,MAEX,WACA,eAEA1F,YAAaC,GACXC,KAAKD,OAASA,EACdC,KAAKyF,QAAU1F,EAAO0F,QAGxB,gBAKE,OAJKzF,kBACHA,gBAAkBO,SAASC,cAAc,OACzCR,KAAKyF,QAAQ5E,YAAYb,kBAEpBA,gBAGT,oBAKE,OAJKA,sBACHA,oBAAsBO,SAASC,cAAc,OAC7CR,KAAKyF,QAAQ5E,YAAYb,sBAEpBA,oBAGTmD,kBAAkBC,GAChB,IAAIsC,EAAUtC,EAAWuC,MACzB3F,KAAK4F,cAAcC,SAAS,GAAGzE,SAC/BpB,KAAK4F,cAAc/E,YAAYN,SAASuF,eAAeJ,IAGzDpB,cAAcnE,GACZ,IAAIuF,EAAUvF,EAAOwF,MACrB3F,KAAK+F,UAAUF,SAAS,GAAGzE,SAC3BpB,KAAK+F,UAAUlF,YAAYN,SAASuF,eAAeJ,MJlBvD,kBACA,YACA,WACA,QACA,WACA,SACA,MAGA,0BAIE,OAHK1F,yBACHA,uBAAyBO,SAASyF,eAAehG,KAAKuB,yBAEjDvB,uBAGT,iBAIE,OAHKA,mBACHA,iBAAmB,IAAIA,KAAKwB,WAAWxB,OAElCA,iBAGT,gBAIE,OAHKA,kBACHA,gBAAkBO,SAASyF,eAAehG,KAAK6D,eAE1C7D,gBAGT,aAIE,OAHIA,eACFA,aAAe,IAAIA,KAAK8D,OAAO9D,OAE1BA,aAGT,gBAIE,OAHKA,kBACHA,gBAAkB,IAAIA,KAAK6E,UAAU7E,OAEhCA,gBAGT,cAIE,OAHKA,gBACHA,cAAgBO,SAASyF,eAAehG,KAAKuF,aAExCvF,cAGT,WAIE,OAHIA,aACFA,WAAa,IAAIA,KAAKwF,KAAKxF,OAEtBA,WAGTiG,MACEjG,KAAKkG,UAAU7F,QACfL,KAAKuD,OAAOK,QACZ5D,KAAKoD,WAAWQ,UDxElBtC,EAAc2E,O","sources":["webpack:///./src/js/source/yt.js","webpack:///./src/js/state.js","webpack:///./src/js/index.js","webpack:///./src/js/static.js","webpack:///./src/js/background.js","webpack:///./src/js/player.js","webpack:///./src/js/shortcuts.js","webpack:///./src/js/info.js"],"sourcesContent":["import { State } from '../state';\n\nexport default class YouTube {\n  #state;\n  #iframe;\n\n  constructor(parent) {\n    this.parent = parent;\n    this.player_el = parent.player_el;\n    this.stream_url = parent.stream.url;\n  }\n\n  setup(){\n    let that = this;\n    this.#iframe = document.createElement(\"iframe\");\n    this.#iframe.setAttribute(\"allow\", \"autoplay; encrypted-media;\");\n    this.#iframe.setAttribute(\"src\", this.stream_url + \"?enablejsapi=1\");\n    this.#iframe.addEventListener(\"load\", function (e) { that.play() })\n    this.player_el.appendChild(this.#iframe);\n    this.#state = State.STOPPED;\n  }\n\n  get state() {\n    return this.#state;\n  }\n\n  post_message(message) {\n    this.#iframe.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"' + message + '\",\"args\":\"\"}', '*')\n  }\n\n  play() {\n    this.post_message('playVideo')\n    this.#state = State.PLAYING;\n  }\n\n  stop() {\n    this.post_message('stopVideo')\n    this.#state = State.STOPPED;\n  }\n\n  destroy() {\n    this.stop()\n    this.#iframe.remove();\n    this.#iframe = undefined;\n    this.#state == undefined;\n  }\n}\n","export const State = {\n  \"STOPPED\": 0,\n  \"PLAYING\": 1\n}\n","import StaticPlayer from \"./static.js\";\n\nlet static_player;\n\n(function () {\n  static_player = new StaticPlayer();\n  static_player.run();\n})();\n","import Player from \"./player.js\";\nimport Background from \"./background.js\";\nimport Shortcuts from \"./shortcuts.js\";\nimport Info from \"./info.js\";\n\nexport default class StaticPlayer {\n  BACKGROUND_VIDEO_EL_ID = \"background-video\"\n  BACKGROUND = Background;\n\n  PLAYER_EL_ID = \"player\";\n  PLAYER = Player;\n\n  SHORTCUTS = Shortcuts;\n\n  INFO_EL_ID = \"info\";\n  INFO = Info;\n\n  #background_video;\n  #background;\n  #player_el;\n  #player;\n  #shortcuts;\n  #info_el;\n  #info;\n\n\n  get background_video_el (){\n    if (!this.#background_video){\n      this.#background_video = document.getElementById(this.BACKGROUND_VIDEO_EL_ID);\n    }\n    return this.#background_video;\n  }\n\n  get background() {\n    if (!this.#background) {\n      this.#background = new this.BACKGROUND(this);\n    }\n    return this.#background;\n  }\n\n  get player_el (){\n    if (!this.#player_el) {\n      this.#player_el = document.getElementById(this.PLAYER_EL_ID);\n    }\n    return this.#player_el;\n  }\n\n  get player(){\n    if(!this.#player) {\n      this.#player = new this.PLAYER(this);\n    }\n    return this.#player;\n  }\n\n  get shortcuts() {\n    if (!this.#shortcuts) {\n      this.#shortcuts = new this.SHORTCUTS(this);\n    }\n    return this.#shortcuts;\n  }\n\n  get info_el (){\n    if (!this.#info_el) {\n      this.#info_el = document.getElementById(this.INFO_EL_ID);\n    }\n    return this.#info_el;\n  }\n\n  get info(){\n    if(!this.#info) {\n      this.#info = new this.INFO(this);\n    }\n    return this.#info;\n  }\n\n  run() {\n    this.shortcuts.setup();\n    this.player.start();\n    this.background.start();\n  }\n}\n","export default class BackgroundVideo {\n  BACKGROUND_VIDEO_URL = \"backgrounds.json\"\n\n  constructor (parent) {\n    this.parent = parent;\n    this.background_video_el = parent.background_video_el;\n    this.background_video_el.defaultPlaybackRate = 0.5;\n  }\n\n  get_json(url, callback) {\n    return fetch(url)\n      .then(function(response) {\n        if (!response.ok) {\n          throw new Error(\"HTTP error, status = \" + response.status);\n        }\n        return response.json();\n      })\n      .then(callback.bind(this))\n  }\n\n  handle_backgrounds(backgrounds) {\n    this.backgrounds = backgrounds;\n  }\n\n  random_choice(arr){\n    return arr[Math.floor(Math.random() * arr.length)];\n  }\n\n  random_background() {\n    var that = this;\n    let backgrounds = Object.keys(this.backgrounds).map(function (key) {\n      return that.backgrounds[key];\n    });\n    return this.random_choice(backgrounds)\n  }\n\n  update_background (background) {\n    this.background_video_el.setAttribute(\"src\", background.url);\n  }\n\n  change() {\n    this.background = this.random_background()\n    this.update_background(this.background);\n    this.parent.info.update_background(this.background);\n    if (this.parent.player.stream) {\n      localStorage.setItem(\"bg-\" + this.parent.player.stream.id, this.background.id);\n    }\n\n  }\n\n  get_backgrounds() {\n    return this.get_json(this.BACKGROUND_VIDEO_URL, this.handle_backgrounds)\n  }\n\n  start() {\n    this.get_backgrounds()\n      .then(this.change.bind(this))\n  }\n}\n","import YouTube from \"./source/yt.js\"\nimport { State } from './state';\n\nexport default class Player {\n  STREAMS_URL = \"streams.json\"\n\n  SOURCES = {\n    \"www.youtube.com\": YouTube\n  }\n\n  constructor (parent) {\n    this.parent = parent\n    this.player_el = parent.player_el;\n  }\n\n  get_json(url, callback) {\n    return fetch(url)\n      .then(function(response) {\n        if (!response.ok) {\n          throw new Error(\"HTTP error, status = \" + response.status);\n        }\n        return response.json();\n      })\n  }\n\n  handle_streams(streams) {\n    this.streams = streams;\n  }\n\n  random_choice(arr){\n    return arr[Math.floor(Math.random() * arr.length)];\n  }\n\n  random_stream() {\n    var that = this;\n    let streams = Object.keys(this.streams).map(function (key) {\n      return that.streams[key];\n    });\n    return this.random_choice(streams);\n  }\n\n  change_stream () {\n    this.stream = this.random_stream();\n    if (this.source) {this.source.destroy()}\n    this.parent.info.update_stream(this.stream);\n\n    const stream_url = new URL(this.stream.url);\n    this.source = new this.SOURCES[stream_url.hostname](this);\n    this.source.setup()\n    localStorage.setItem(\"stream\", this.stream.id);\n  }\n\n  pause() {\n    this.source.stop();\n  }\n\n  play() {\n    this.source.play();\n  }\n\n  toggle() {\n    if (this.source.state == State.PLAYING) {\n      this.source.stop();\n      return;\n    }\n    else if (this.source.state == State.STOPPED) {\n      this.source.play();\n      return;\n    }\n  }\n\n  clear(){\n    if (this.source) {this.source.destroy()};\n  }\n\n  start() {\n    this.get_json(this.STREAMS_URL, this.handle_streams)\n      .then(this.handle_streams.bind(this))\n      .then(this.change_stream.bind(this))\n  }\n}\n","export default class Shortcuts {\n  KEY_MAP = {\n    \"Space\": this.playpause,\n    \"ArrowRight\": this.next_station,\n    \"ArrowLeft\": this.prev_station,\n    \"ArrowDown\": this.change_background,\n    \"ArrowUp\": this.change_background\n  }\n\n  constructor(parent) {\n    this.parent = parent;\n  }\n\n  setup() {\n    const that = this;\n    document.addEventListener(\"keyup\", (e) => {\n      e = e || window.event;\n\n      if (e.code in this.KEY_MAP) {\n        this.KEY_MAP[e.code].call(that, e)\n      }\n    })\n  }\n\n  playpause (e) {\n    this.parent.player.toggle();\n  }\n\n  next_station () {\n    this.parent.player.change_stream()\n  }\n\n  prev_station () {\n    this.parent.player.change_stream()\n  }\n\n  change_background () {\n    this.parent.background.change();\n  }\n}\n","export default class Info {\n\n    #stream_el;\n    #background_el;\n\n    constructor (parent) {\n      this.parent = parent;\n      this.info_el = parent.info_el;\n    }\n\n    get stream_el () {\n      if (!this.#stream_el) {\n        this.#stream_el = document.createElement(\"pre\");\n        this.info_el.appendChild(this.#stream_el);\n      }\n      return this.#stream_el\n    }\n\n    get background_el () {\n      if (!this.#background_el) {\n        this.#background_el = document.createElement(\"pre\");\n        this.info_el.appendChild(this.#background_el);\n      }\n      return this.#background_el\n    }\n\n    update_background(background) {\n      let content = background.title;\n      this.background_el.children[0].remove()\n      this.background_el.appendChild(document.createTextNode(content))\n    }\n\n    update_stream(stream) {\n      let content = stream.title;\n      this.stream_el.children[0].remove()\n      this.stream_el.appendChild(document.createTextNode(content))\n    }\n}\n"],"names":["YouTube","constructor","parent","this","player_el","stream_url","stream","url","setup","that","document","createElement","setAttribute","addEventListener","e","play","appendChild","post_message","message","contentWindow","postMessage","stop","destroy","remove","undefined","static_player","BACKGROUND_VIDEO_EL_ID","BACKGROUND","BACKGROUND_VIDEO_URL","background_video_el","defaultPlaybackRate","get_json","callback","fetch","then","response","ok","Error","status","json","bind","handle_backgrounds","backgrounds","random_choice","arr","Math","floor","random","length","random_background","Object","keys","map","key","update_background","background","change","info","player","localStorage","setItem","id","get_backgrounds","start","PLAYER_EL_ID","PLAYER","STREAMS_URL","SOURCES","handle_streams","streams","random_stream","change_stream","source","update_stream","URL","hostname","pause","toggle","state","clear","SHORTCUTS","KEY_MAP","playpause","next_station","prev_station","change_background","window","event","code","call","INFO_EL_ID","INFO","info_el","content","title","background_el","children","createTextNode","stream_el","getElementById","run","shortcuts"],"sourceRoot":""}